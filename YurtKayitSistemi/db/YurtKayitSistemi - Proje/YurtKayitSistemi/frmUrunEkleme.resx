<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>